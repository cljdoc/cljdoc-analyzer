{:group-id "miika", :artifact-id "clj-branca", :version "0.1.0", :analysis {"clj" ({:name clj-branca.core, :publics ({:name +version+, :file "clj_branca/core.clj", :line 9, :doc "The supported Branca token version.\n", :type :var} {:name decode, :file "clj_branca/core.clj", :line 109, :arglists ([key token] [key token options]), :doc "Decode `token` as a Branca token using encryption key `key`.\n\nReturns the token payload as a byte array, or throws an ExceptionInfo with\n`:type` set to `:clj-branca.core/invalid-token` in exception data.\n\nThe following options are available:\n\n| key | description |\n| --- | ------------|\n| now | The current time as seconds since the UNIX epoch. Default: system time. |\n| ttl | Token time-to-live in seconds. If set, throws if the token has expired. Default: nil. |\n", :type :var} {:name decode*, :file "clj_branca/core.clj", :line 68, :arglists ([key token] [key token options]), :doc "Decode `token` as a Branca token using encryption key `key`.\n\nReturns a map representing the token. If you just want the payload, use\n[[decode]]. If there's a problem, throws an ExceptionInfo with `:type` set to\n`:clj-branca.core/invalid-token` in exception data.\n\nTakes the same options as [[decode]].", :type :var} {:name encode, :file "clj_branca/core.clj", :line 34, :arglists ([key payload] [key payload options]), :doc "Encode `payload` as a Branca token using the encryption key `key`.\n\n`key` should be a 32-byte byte array. `payload` should be a byte array, a\nstring, or something that can be converted into a byte array using the\n[byte-streams] library.\n\n[byte-streams]: https://github.com/aleph-io/byte-streams\n\nReturns the token as a string, or throws an ExceptionInfo with `:type` set to\n`:clj-branca.core/encode-failure` in exception data.\n\nThe following options are available:\n\n| key | description |\n| --- | ------------|\n| now | The token timestamp as seconds since the UNIX epoch. Default: system time. |\n", :type :var})} {:name clj-branca.crypto, :publics ({:name +key-length+, :file "clj_branca/crypto.clj", :line 10, :type :var} {:name decrypt, :file "clj_branca/crypto.clj", :line 38, :arglists ([c ad n k]), :type :var} {:name encrypt, :file "clj_branca/crypto.clj", :line 22, :arglists ([msg ad n k]), :type :var} {:name generate-key, :file "clj_branca/crypto.clj", :line 12, :arglists ([]), :doc "Generate a new encryption key.\n\nReturns the generated key as a byte array.", :type :var} {:name lazy-sodium, :file "clj_branca/crypto.clj", :line 8, :type :var} {:name random-bytes, :file "clj_branca/crypto.clj", :line 19, :arglists ([n]), :type :var} {:name sodium, :file "clj_branca/crypto.clj", :line 7, :type :var})})}, :pom-str "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>miikka</groupId>\n  <artifactId>clj-branca</artifactId>\n  <version>0.1.0</version>\n  <name>clj-branca</name>\n  <description>Encode and decode Branca tokens in Clojure</description>\n  <url>https://sr.ht/~miikka/clj-branca/</url>\n  <scm>\n    <connection>scm:git:https://git.sr.ht/~miikka/clj-branca</connection>\n    <developerConnection>scm:git:ssh://git@git.sr.ht/~miikka/clj-branca</developerConnection>\n    <tag>1699c15fd4f78acfc0688dadc8aa4457d89c04bc</tag>\n    <url>https://git.sr.ht/~miikka/clj-branca</url>\n  </scm>\n  <dependencies>\n    <dependency>\n      <groupId>org.clojure</groupId>\n      <artifactId>clojure</artifactId>\n      <version>1.10.1</version>\n    </dependency>\n    <dependency>\n      <groupId>miikka</groupId>\n      <artifactId>clj-base62</artifactId>\n      <version>0.1.0</version>\n    </dependency>\n    <dependency>\n      <groupId>byte-streams</groupId>\n      <artifactId>byte-streams</artifactId>\n      <version>0.2.4</version>\n    </dependency>\n    <dependency>\n      <groupId>com.goterl.lazycode</groupId>\n      <artifactId>lazysodium-java</artifactId>\n      <version>4.3.0</version>\n    </dependency>\n  </dependencies>\n  <build>\n    <sourceDirectory>src</sourceDirectory>\n  </build>\n  <repositories>\n    <repository>\n      <id>clojars</id>\n      <url>https://repo.clojars.org/</url>\n    </repository>\n    <repository>\n      <id>jcenter</id>\n      <url>https://jcenter.bintray.com</url>\n    </repository>\n  </repositories>\n</project>\n"}